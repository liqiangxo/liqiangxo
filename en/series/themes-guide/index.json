[{"content":"hugo hugo builds your site\nSynopsis hugo is the main command, used to build your Hugo site.\nHugo is a Fast and Flexible Static Site Generator\nbuilt with love by spf13 and friends in Go.\nComplete documentation is available at http://gohugo.io/.\nhugo [flags]\rOptions  -b, --baseURL string hostname (and path) to the root, e.g. http://spf13.com/\r-D, --buildDrafts include content marked as draft\r-E, --buildExpired include expired content\r-F, --buildFuture include content with publishdate in the future\r--cacheDir string filesystem path to cache directory. Defaults: $TMPDIR/hugo_cache/\r--cleanDestinationDir remove files from destination not found in static directories\r--config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r-c, --contentDir string filesystem path to content directory\r--debug debug output\r-d, --destination string filesystem path to write files to\r--disableKinds strings disable different kind of pages (home, RSS etc.)\r--enableGitInfo add Git revision, date and author info to the pages\r-e, --environment string build environment\r--forceSyncStatic copy all files when static is changed.\r--gc enable to run some cleanup tasks (remove unused cache files) after the build\r-h, --help help for hugo\r--i18n-warnings print missing translations\r--ignoreCache ignores the cache directory\r--ignoreVendor ignores any _vendor directory\r-l, --layoutDir string filesystem path to layout directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--minify minify any supported output format (HTML, XML etc.)\r--noChmod don't sync permission mode of files\r--noTimes don't sync modification time of files\r--path-warnings print warnings on duplicate target paths etc.\r--quiet build in quiet mode\r--renderToMemory render to memory (only useful for benchmark testing)\r-s, --source string filesystem path to read files relative from\r--templateMetrics display metrics about template executions\r--templateMetricsHints calculate some improvement hints when combined with --templateMetrics\r-t, --theme strings themes to use (located in /themes/THEMENAME/)\r--themesDir string filesystem path to themes directory\r--trace file write trace to file (not useful in general)\r-v, --verbose verbose output\r--verboseLog verbose logging\r-w, --watch watch filesystem for changes and recreate as needed\rSEE ALSO  hugo config\t- Print the site configuration hugo convert\t- Convert your content to different formats hugo deploy\t- Deploy your site to a Cloud provider. hugo env\t- Print Hugo version and environment info hugo gen\t- A collection of several useful generators. hugo import\t- Import your site from others. hugo list\t- Listing out various types of content hugo mod\t- Various Hugo Modules helpers. hugo new\t- Create new content for your site hugo server\t- A high performance webserver hugo version\t- Print the version number of Hugo  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":2,"section":"hugodoc","tags":["hugo"],"title":"hugo","uri":"https://www.liqiangxo.one/commands/hugo/"},{"content":"hugo config Print the site configuration\nSynopsis Print the site configuration, both default and custom settings.\nhugo config [flags]\rOptions  -h, --help help for config\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo\t- hugo builds your site hugo config mounts\t- Print the configured file mounts  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":3,"section":"hugodoc","tags":["hugo"],"title":"hugo config","uri":"https://www.liqiangxo.one/commands/hugo_config/"},{"content":"hugo config mounts Print the configured file mounts\nSynopsis Print the configured file mounts\nhugo config mounts [flags]\rOptions  -h, --help help for mounts\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo config\t- Print the site configuration  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":4,"section":"hugodoc","tags":["hugo"],"title":"hugo config mounts","uri":"https://www.liqiangxo.one/commands/hugo_config_mounts/"},{"content":"hugo convert Convert your content to different formats\nSynopsis Convert your content (e.g. front matter) to different formats.\nSee convert\u0026rsquo;s subcommands toJSON, toTOML and toYAML for more information.\nOptions  -h, --help help for convert\r-o, --output string filesystem path to write files to\r--unsafe enable less safe operations, please backup first\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo\t- hugo builds your site hugo convert toJSON\t- Convert front matter to JSON hugo convert toTOML\t- Convert front matter to TOML hugo convert toYAML\t- Convert front matter to YAML  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":5,"section":"hugodoc","tags":["hugo"],"title":"hugo convert","uri":"https://www.liqiangxo.one/commands/hugo_convert/"},{"content":"hugo convert toJSON Convert front matter to JSON\nSynopsis toJSON converts all front matter in the content directory\nto use JSON for the front matter.\nhugo convert toJSON [flags]\rOptions  -h, --help help for toJSON\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r-o, --output string filesystem path to write files to\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r--unsafe enable less safe operations, please backup first\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo convert\t- Convert your content to different formats  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":6,"section":"hugodoc","tags":["hugo"],"title":"hugo convert toJSON","uri":"https://www.liqiangxo.one/commands/hugo_convert_tojson/"},{"content":"hugo convert toTOML Convert front matter to TOML\nSynopsis toTOML converts all front matter in the content directory\nto use TOML for the front matter.\nhugo convert toTOML [flags]\rOptions  -h, --help help for toTOML\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r-o, --output string filesystem path to write files to\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r--unsafe enable less safe operations, please backup first\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo convert\t- Convert your content to different formats  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":7,"section":"hugodoc","tags":["hugo"],"title":"hugo convert toTOML","uri":"https://www.liqiangxo.one/commands/hugo_convert_totoml/"},{"content":"hugo convert toYAML Convert front matter to YAML\nSynopsis toYAML converts all front matter in the content directory\nto use YAML for the front matter.\nhugo convert toYAML [flags]\rOptions  -h, --help help for toYAML\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r-o, --output string filesystem path to write files to\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r--unsafe enable less safe operations, please backup first\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo convert\t- Convert your content to different formats  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":8,"section":"hugodoc","tags":["hugo"],"title":"hugo convert toYAML","uri":"https://www.liqiangxo.one/commands/hugo_convert_toyaml/"},{"content":"hugo deploy Deploy your site to a Cloud provider.\nSynopsis Deploy your site to a Cloud provider.\nSee https://gohugo.io/hosting-and-deployment/hugo-deploy/ for detailed\ndocumentation.\nhugo deploy [flags]\rOptions  --confirm ask for confirmation before making changes to the target\r--dryRun dry run\r--force force upload of all files\r-h, --help help for deploy\r--invalidateCDN invalidate the CDN cache listed in the deployment target (default true)\r--maxDeletes int maximum # of files to delete, or -1 to disable (default 256)\r--target string target deployment from deployments section in config file; defaults to the first one\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo\t- hugo builds your site  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":9,"section":"hugodoc","tags":["hugo"],"title":"hugo deploy","uri":"https://www.liqiangxo.one/commands/hugo_deploy/"},{"content":"hugo env Print Hugo version and environment info\nSynopsis Print Hugo version and environment info. This is useful in Hugo bug reports.\nhugo env [flags]\rOptions  -h, --help help for env\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo\t- hugo builds your site  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":10,"section":"hugodoc","tags":["hugo"],"title":"hugo env","uri":"https://www.liqiangxo.one/commands/hugo_env/"},{"content":"hugo gen A collection of several useful generators.\nSynopsis A collection of several useful generators.\nOptions  -h, --help help for gen\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo\t- hugo builds your site hugo gen autocomplete\t- Generate shell autocompletion script for Hugo hugo gen chromastyles\t- Generate CSS stylesheet for the Chroma code highlighter hugo gen doc\t- Generate Markdown documentation for the Hugo CLI. hugo gen man\t- Generate man pages for the Hugo CLI  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":11,"section":"hugodoc","tags":["hugo"],"title":"hugo gen","uri":"https://www.liqiangxo.one/commands/hugo_gen/"},{"content":"hugo gen autocomplete Generate shell autocompletion script for Hugo\nSynopsis Generates a shell autocompletion script for Hugo.\nNOTE: The current version supports Bash only.\nThis should work for *nix systems with Bash installed.\nBy default, the file is written directly to /etc/bash_completion.d\nfor convenience, and the command may need superuser rights, e.g.:\n$ sudo hugo gen autocomplete\r Add --completionfile=/path/to/file flag to set alternative\nfile-path and name.\nLogout and in again to reload the completion scripts,\nor just source them in directly:\n$ . /etc/bash_completion\r hugo gen autocomplete [flags]\rOptions  --completionfile string autocompletion file (default \u0026quot;/etc/bash_completion.d/hugo.sh\u0026quot;)\r-h, --help help for autocomplete\r--type string autocompletion type (currently only bash supported) (default \u0026quot;bash\u0026quot;)\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo gen\t- A collection of several useful generators.  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":12,"section":"hugodoc","tags":["hugo"],"title":"hugo gen autocomplete","uri":"https://www.liqiangxo.one/commands/hugo_gen_autocomplete/"},{"content":"hugo gen chromastyles Generate CSS stylesheet for the Chroma code highlighter\nSynopsis Generate CSS stylesheet for the Chroma code highlighter for a given style. This stylesheet is needed if pygmentsUseClasses is enabled in config.\nSee https://help.farbox.com/pygments.html for preview of available styles\nhugo gen chromastyles [flags]\rOptions  -h, --help help for chromastyles\r--highlightStyle string style used for highlighting lines (see https://github.com/alecthomas/chroma) (default \u0026quot;bg:#ffffcc\u0026quot;)\r--linesStyle string style used for line numbers (see https://github.com/alecthomas/chroma)\r--style string highlighter style (see https://help.farbox.com/pygments.html) (default \u0026quot;friendly\u0026quot;)\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo gen\t- A collection of several useful generators.  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":13,"section":"hugodoc","tags":["hugo"],"title":"hugo gen chromastyles","uri":"https://www.liqiangxo.one/commands/hugo_gen_chromastyles/"},{"content":"hugo gen doc Generate Markdown documentation for the Hugo CLI.\nSynopsis Generate Markdown documentation for the Hugo CLI.\nThis command is, mostly, used to create up-to-date documentation\nof Hugo\u0026rsquo;s command-line interface for http://gohugo.io/.\nIt creates one Markdown file per command with front matter suitable\nfor rendering in Hugo.\nhugo gen doc [flags]\rOptions  --dir string the directory to write the doc. (default \u0026quot;/tmp/hugodoc/\u0026quot;)\r-h, --help help for doc\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo gen\t- A collection of several useful generators.  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":14,"section":"hugodoc","tags":["hugo"],"title":"hugo gen doc","uri":"https://www.liqiangxo.one/commands/hugo_gen_doc/"},{"content":"hugo gen man Generate man pages for the Hugo CLI\nSynopsis This command automatically generates up-to-date man pages of Hugo\u0026rsquo;s\ncommand-line interface. By default, it creates the man page files\nin the \u0026ldquo;man\u0026rdquo; directory under the current directory.\nhugo gen man [flags]\rOptions  --dir string the directory to write the man pages. (default \u0026quot;man/\u0026quot;)\r-h, --help help for man\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo gen\t- A collection of several useful generators.  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":15,"section":"hugodoc","tags":["hugo"],"title":"hugo gen man","uri":"https://www.liqiangxo.one/commands/hugo_gen_man/"},{"content":"hugo import Import your site from others.\nSynopsis Import your site from other web site generators like Jekyll.\nImport requires a subcommand, e.g. hugo import jekyll jekyll_root_path target_path.\nOptions  -h, --help help for import\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo\t- hugo builds your site hugo import jekyll\t- hugo import from Jekyll  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":16,"section":"hugodoc","tags":["hugo"],"title":"hugo import","uri":"https://www.liqiangxo.one/commands/hugo_import/"},{"content":"hugo import jekyll hugo import from Jekyll\nSynopsis hugo import from Jekyll.\nImport from Jekyll requires two paths, e.g. hugo import jekyll jekyll_root_path target_path.\nhugo import jekyll [flags]\rOptions  --force allow import into non-empty target directory\r-h, --help help for jekyll\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo import\t- Import your site from others.  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":17,"section":"hugodoc","tags":["hugo"],"title":"hugo import jekyll","uri":"https://www.liqiangxo.one/commands/hugo_import_jekyll/"},{"content":"hugo list Listing out various types of content\nSynopsis Listing out various types of content.\nList requires a subcommand, e.g. hugo list drafts.\nOptions  -h, --help help for list\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo\t- hugo builds your site hugo list all\t- List all posts hugo list drafts\t- List all drafts hugo list expired\t- List all posts already expired hugo list future\t- List all posts dated in the future  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":18,"section":"hugodoc","tags":["hugo"],"title":"hugo list","uri":"https://www.liqiangxo.one/commands/hugo_list/"},{"content":"hugo list all List all posts\nSynopsis List all of the posts in your content directory, include drafts, future and expired pages.\nhugo list all [flags]\rOptions  -h, --help help for all\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo list\t- Listing out various types of content  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":19,"section":"hugodoc","tags":["hugo"],"title":"hugo list all","uri":"https://www.liqiangxo.one/commands/hugo_list_all/"},{"content":"hugo list drafts List all drafts\nSynopsis List all of the drafts in your content directory.\nhugo list drafts [flags]\rOptions  -h, --help help for drafts\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo list\t- Listing out various types of content  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":20,"section":"hugodoc","tags":["hugo"],"title":"hugo list drafts","uri":"https://www.liqiangxo.one/commands/hugo_list_drafts/"},{"content":"hugo list expired List all posts already expired\nSynopsis List all of the posts in your content directory which has already expired.\nhugo list expired [flags]\rOptions  -h, --help help for expired\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo list\t- Listing out various types of content  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":21,"section":"hugodoc","tags":["hugo"],"title":"hugo list expired","uri":"https://www.liqiangxo.one/commands/hugo_list_expired/"},{"content":"hugo list future List all posts dated in the future\nSynopsis List all of the posts in your content directory which will be posted in the future.\nhugo list future [flags]\rOptions  -h, --help help for future\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo list\t- Listing out various types of content  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":22,"section":"hugodoc","tags":["hugo"],"title":"hugo list future","uri":"https://www.liqiangxo.one/commands/hugo_list_future/"},{"content":"hugo mod Various Hugo Modules helpers.\nSynopsis Various helpers to help manage the modules in your project\u0026rsquo;s dependency graph.\nMost operations here requires a Go version installed on your system (\u0026gt;= Go 1.12) and the relevant VCS client (typically Git).\nThis is not needed if you only operate on modules inside /themes or if you have vendored them via \u0026ldquo;hugo mod vendor\u0026rdquo;.\nNote that Hugo will always start out by resolving the components defined in the site\nconfiguration, provided by a _vendor directory (if no \u0026ndash;ignoreVendor flag provided),\nGo Modules, or a folder inside the themes directory, in that order.\nSee https://gohugo.io/hugo-modules/ for more information.\nOptions  -b, --baseURL string hostname (and path) to the root, e.g. http://spf13.com/\r-D, --buildDrafts include content marked as draft\r-E, --buildExpired include expired content\r-F, --buildFuture include content with publishdate in the future\r--cacheDir string filesystem path to cache directory. Defaults: $TMPDIR/hugo_cache/\r--cleanDestinationDir remove files from destination not found in static directories\r-c, --contentDir string filesystem path to content directory\r-d, --destination string filesystem path to write files to\r--disableKinds strings disable different kind of pages (home, RSS etc.)\r--enableGitInfo add Git revision, date and author info to the pages\r--forceSyncStatic copy all files when static is changed.\r--gc enable to run some cleanup tasks (remove unused cache files) after the build\r-h, --help help for mod\r--i18n-warnings print missing translations\r--ignoreCache ignores the cache directory\r-l, --layoutDir string filesystem path to layout directory\r--minify minify any supported output format (HTML, XML etc.)\r--noChmod don't sync permission mode of files\r--noTimes don't sync modification time of files\r--path-warnings print warnings on duplicate target paths etc.\r--templateMetrics display metrics about template executions\r--templateMetricsHints calculate some improvement hints when combined with --templateMetrics\r-t, --theme strings themes to use (located in /themes/THEMENAME/)\r--trace file write trace to file (not useful in general)\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo\t- hugo builds your site hugo mod clean\t- Delete the Hugo Module cache for the current project. hugo mod get\t- Resolves dependencies in your current Hugo Project. hugo mod graph\t- Print a module dependency graph. hugo mod init\t- Initialize this project as a Hugo Module. hugo mod tidy\t- Remove unused entries in go.mod and go.sum. hugo mod vendor\t- Vendor all module dependencies into the _vendor directory. hugo mod verify\t- Verify dependencies.  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":23,"section":"hugodoc","tags":["hugo"],"title":"hugo mod","uri":"https://www.liqiangxo.one/commands/hugo_mod/"},{"content":"hugo mod clean Delete the Hugo Module cache for the current project.\nSynopsis Delete the Hugo Module cache for the current project.\nNote that after you run this command, all of your dependencies will be re-downloaded next time you run \u0026ldquo;hugo\u0026rdquo;.\nAlso note that if you configure a positive maxAge for the \u0026ldquo;modules\u0026rdquo; file cache, it will also be cleaned as part of \u0026ldquo;hugo \u0026ndash;gc\u0026rdquo;.\nhugo mod clean [flags]\rOptions  --all clean entire module cache\r-h, --help help for clean\r--pattern string pattern matching module paths to clean (all if not set), e.g. \u0026quot;**hugo*\u0026quot;\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo mod\t- Various Hugo Modules helpers.  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":24,"section":"hugodoc","tags":["hugo"],"title":"hugo mod clean","uri":"https://www.liqiangxo.one/commands/hugo_mod_clean/"},{"content":"hugo mod get Resolves dependencies in your current Hugo Project.\nSynopsis Resolves dependencies in your current Hugo Project.\nSome examples:\nInstall the latest version possible for a given module:\nhugo mod get github.com/gohugoio/testshortcodes\r Install a specific version:\nhugo mod get github.com/gohugoio/testshortcodes@v0.3.0\r Install the latest versions of all module dependencies:\nhugo mod get -u\rhugo mod get -u ./... (recursive)\r Run \u0026ldquo;go help get\u0026rdquo; for more information. All flags available for \u0026ldquo;go get\u0026rdquo; is also relevant here.\nNote that Hugo will always start out by resolving the components defined in the site\nconfiguration, provided by a _vendor directory (if no \u0026ndash;ignoreVendor flag provided),\nGo Modules, or a folder inside the themes directory, in that order.\nSee https://gohugo.io/hugo-modules/ for more information.\nhugo mod get [flags]\rOptions  -h, --help help for get\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo mod\t- Various Hugo Modules helpers.  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":25,"section":"hugodoc","tags":["hugo"],"title":"hugo mod get","uri":"https://www.liqiangxo.one/commands/hugo_mod_get/"},{"content":"hugo mod graph Print a module dependency graph.\nSynopsis Print a module dependency graph with information about module status (disabled, vendored).\nNote that for vendored modules, that is the version listed and not the one from go.mod.\nhugo mod graph [flags]\rOptions  -h, --help help for graph\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo mod\t- Various Hugo Modules helpers.  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":26,"section":"hugodoc","tags":["hugo"],"title":"hugo mod graph","uri":"https://www.liqiangxo.one/commands/hugo_mod_graph/"},{"content":"hugo mod init Initialize this project as a Hugo Module.\nSynopsis Initialize this project as a Hugo Module.\nIt will try to guess the module path, but you may help by passing it as an argument, e.g:\nhugo mod init github.com/gohugoio/testshortcodes\r Note that Hugo Modules supports multi-module projects, so you can initialize a Hugo Module\ninside a subfolder on GitHub, as one example.\nhugo mod init [flags]\rOptions  -h, --help help for init\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo mod\t- Various Hugo Modules helpers.  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":27,"section":"hugodoc","tags":["hugo"],"title":"hugo mod init","uri":"https://www.liqiangxo.one/commands/hugo_mod_init/"},{"content":"hugo mod tidy Remove unused entries in go.mod and go.sum.\nSynopsis Remove unused entries in go.mod and go.sum.\nhugo mod tidy [flags]\rOptions  -h, --help help for tidy\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo mod\t- Various Hugo Modules helpers.  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":28,"section":"hugodoc","tags":["hugo"],"title":"hugo mod tidy","uri":"https://www.liqiangxo.one/commands/hugo_mod_tidy/"},{"content":"hugo mod vendor Vendor all module dependencies into the _vendor directory.\nSynopsis Vendor all module dependencies into the _vendor directory.\nIf a module is vendored, that is where Hugo will look for it\u0026rsquo;s dependencies.\nhugo mod vendor [flags]\rOptions  -h, --help help for vendor\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo mod\t- Various Hugo Modules helpers.  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":29,"section":"hugodoc","tags":["hugo"],"title":"hugo mod vendor","uri":"https://www.liqiangxo.one/commands/hugo_mod_vendor/"},{"content":"hugo mod verify Verify dependencies.\nSynopsis Verify checks that the dependencies of the current module, which are stored in a local downloaded source cache, have not been modified since being downloaded.\nhugo mod verify [flags]\rOptions  --clean delete module cache for dependencies that fail verification\r-h, --help help for verify\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo mod\t- Various Hugo Modules helpers.  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":30,"section":"hugodoc","tags":["hugo"],"title":"hugo mod verify","uri":"https://www.liqiangxo.one/commands/hugo_mod_verify/"},{"content":"hugo new Create new content for your site\nSynopsis Create a new content file and automatically set the date and title.\nIt will guess which kind of file to create based on the path provided.\nYou can also specify the kind with -k KIND.\nIf archetypes are provided in your theme or site, they will be used.\nEnsure you run this within the root directory of your site.\nhugo new [path] [flags]\rOptions  -b, --baseURL string hostname (and path) to the root, e.g. http://spf13.com/\r-D, --buildDrafts include content marked as draft\r-E, --buildExpired include expired content\r-F, --buildFuture include content with publishdate in the future\r--cacheDir string filesystem path to cache directory. Defaults: $TMPDIR/hugo_cache/\r--cleanDestinationDir remove files from destination not found in static directories\r-c, --contentDir string filesystem path to content directory\r-d, --destination string filesystem path to write files to\r--disableKinds strings disable different kind of pages (home, RSS etc.)\r--editor string edit new content with this editor, if provided\r--enableGitInfo add Git revision, date and author info to the pages\r--forceSyncStatic copy all files when static is changed.\r--gc enable to run some cleanup tasks (remove unused cache files) after the build\r-h, --help help for new\r--i18n-warnings print missing translations\r--ignoreCache ignores the cache directory\r-k, --kind string content type to create\r-l, --layoutDir string filesystem path to layout directory\r--minify minify any supported output format (HTML, XML etc.)\r--noChmod don't sync permission mode of files\r--noTimes don't sync modification time of files\r--path-warnings print warnings on duplicate target paths etc.\r--templateMetrics display metrics about template executions\r--templateMetricsHints calculate some improvement hints when combined with --templateMetrics\r-t, --theme strings themes to use (located in /themes/THEMENAME/)\r--trace file write trace to file (not useful in general)\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo\t- hugo builds your site hugo new site\t- Create a new site (skeleton) hugo new theme\t- Create a new theme  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":31,"section":"hugodoc","tags":["hugo"],"title":"hugo new","uri":"https://www.liqiangxo.one/commands/hugo_new/"},{"content":"hugo new site Create a new site (skeleton)\nSynopsis Create a new site in the provided directory.\nThe new site will have the correct structure, but no content or theme yet.\nUse hugo new [contentPath] to create new content.\nhugo new site [path] [flags]\rOptions  --force init inside non-empty directory\r-f, --format string config \u0026amp; frontmatter format (default \u0026quot;toml\u0026quot;)\r-h, --help help for site\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo new\t- Create new content for your site  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":32,"section":"hugodoc","tags":["hugo"],"title":"hugo new site","uri":"https://www.liqiangxo.one/commands/hugo_new_site/"},{"content":"hugo new theme Create a new theme\nSynopsis Create a new theme (skeleton) called [name] in the current directory.\nNew theme is a skeleton. Please add content to the touched files. Add your\nname to the copyright line in the license and adjust the theme.toml file\nas you see fit.\nhugo new theme [name] [flags]\rOptions  -h, --help help for theme\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo new\t- Create new content for your site  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":33,"section":"hugodoc","tags":["hugo"],"title":"hugo new theme","uri":"https://www.liqiangxo.one/commands/hugo_new_theme/"},{"content":"hugo server A high performance webserver\nSynopsis Hugo provides its own webserver which builds and serves the site.\nWhile hugo server is high performance, it is a webserver with limited options.\nMany run it in production, but the standard behavior is for people to use it\nin development and use a more full featured server such as Nginx or Caddy.\n\u0026lsquo;hugo server\u0026rsquo; will avoid writing the rendered and served content to disk,\npreferring to store it in memory.\nBy default hugo will also watch your files for any changes you make and\nautomatically rebuild the site. It will then live reload any open browser pages\nand push the latest content to them. As most Hugo sites are built in a fraction\nof a second, you will be able to save and see your changes nearly instantly.\nhugo server [flags]\rOptions  --appendPort append port to baseURL (default true)\r-b, --baseURL string hostname (and path) to the root, e.g. http://spf13.com/\r--bind string interface to which the server will bind (default \u0026quot;127.0.0.1\u0026quot;)\r-D, --buildDrafts include content marked as draft\r-E, --buildExpired include expired content\r-F, --buildFuture include content with publishdate in the future\r--cacheDir string filesystem path to cache directory. Defaults: $TMPDIR/hugo_cache/\r--cleanDestinationDir remove files from destination not found in static directories\r-c, --contentDir string filesystem path to content directory\r-d, --destination string filesystem path to write files to\r--disableBrowserError do not show build errors in the browser\r--disableFastRender enables full re-renders on changes\r--disableKinds strings disable different kind of pages (home, RSS etc.)\r--disableLiveReload watch without enabling live browser reload on rebuild\r--enableGitInfo add Git revision, date and author info to the pages\r--forceSyncStatic copy all files when static is changed.\r--gc enable to run some cleanup tasks (remove unused cache files) after the build\r-h, --help help for server\r--i18n-warnings print missing translations\r--ignoreCache ignores the cache directory\r-l, --layoutDir string filesystem path to layout directory\r--liveReloadPort int port for live reloading (i.e. 443 in HTTPS proxy situations) (default -1)\r--meminterval string interval to poll memory usage (requires --memstats), valid time units are \u0026quot;ns\u0026quot;, \u0026quot;us\u0026quot; (or \u0026quot;µs\u0026quot;), \u0026quot;ms\u0026quot;, \u0026quot;s\u0026quot;, \u0026quot;m\u0026quot;, \u0026quot;h\u0026quot;. (default \u0026quot;100ms\u0026quot;)\r--memstats string log memory usage to this file\r--minify minify any supported output format (HTML, XML etc.)\r--navigateToChanged navigate to changed content file on live browser reload\r--noChmod don't sync permission mode of files\r--noHTTPCache prevent HTTP caching\r--noTimes don't sync modification time of files\r--path-warnings print warnings on duplicate target paths etc.\r-p, --port int port on which the server will listen (default 1313)\r--renderToDisk render to Destination path (default is render to memory \u0026amp; serve from there)\r--templateMetrics display metrics about template executions\r--templateMetricsHints calculate some improvement hints when combined with --templateMetrics\r-t, --theme strings themes to use (located in /themes/THEMENAME/)\r--trace file write trace to file (not useful in general)\r-w, --watch watch filesystem for changes and recreate as needed (default true)\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo\t- hugo builds your site  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":34,"section":"hugodoc","tags":["hugo"],"title":"hugo server","uri":"https://www.liqiangxo.one/commands/hugo_server/"},{"content":"hugo version Print the version number of Hugo\nSynopsis All software has versions. This is Hugo\u0026rsquo;s.\nhugo version [flags]\rOptions  -h, --help help for version\rOptions inherited from parent commands  --config string config file (default is path/config.yaml|json|toml)\r--configDir string config dir (default \u0026quot;config\u0026quot;)\r--debug debug output\r-e, --environment string build environment\r--ignoreVendor ignores any _vendor directory\r--log enable Logging\r--logFile string log File path (if set, logging enabled automatically)\r--quiet build in quiet mode\r-s, --source string filesystem path to read files relative from\r--themesDir string filesystem path to themes directory\r-v, --verbose verbose output\r--verboseLog verbose logging\rSEE ALSO  hugo\t- hugo builds your site  Auto generated by spf13/cobra on 26-Aug-2020 ","description":"","id":35,"section":"hugodoc","tags":["hugo"],"title":"hugo version","uri":"https://www.liqiangxo.one/commands/hugo_version/"},{"content":"Markdownify box This is boxmd shortcode Simple box This is **box** shortcode\r Code tabs Make it easy to switch between different code\njava\rjavascript\r\r1  System.out.println(\u0026#39;Hello World!\u0026#39;);   \r\r1  console.log(\u0026#39;Hello World!\u0026#39;);   \r\r\r\r'use strict';\rvar containerId = JSON.parse(\"\\\"e3ccd48fd780d100\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar codetabLinks = null;\rvar codetabContents = null;\rvar ids = [];\rif (containerElem) {\rcodetabLinks = containerElem.querySelectorAll('.codetab__link');\rcodetabContents = containerElem.querySelectorAll('.codetab__content');\r}\rfor (var i = 0; i 0) {\rcodetabContents[0].style.display = 'block';\r}\r Tabs for general purpose Windows\rMacOS\rUbuntu\r\rWindows section 1  console.log(\u0026#39;Hello World!\u0026#39;);   ⚠️Becareful that the content in the tab should be different from each other. The tab makes unique id hashes depending on the tab contents. So, If you just copy-paste the tabs with multiple times, since it has the same contents, the tab will not work.\n\rMacOS section Hello world!\r\rUbuntu section Great!\r\r\r\r'use strict';\rvar containerId = JSON.parse(\"\\\"11c0a9caaffdb188\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar tabLinks = null;\rvar tabContents = null;\rvar ids = [];\rif (containerElem) {\rtabLinks = containerElem.querySelectorAll('.tab__link');\rtabContents = containerElem.querySelectorAll('.tab__content');\r}\rfor (var i = 0; i 0) {\rtabContents[0].style.display = 'block';\r}\r Expand \r\rExpand me\r\rTitle contents\r\r \r\rExpand me2\r\rTitle2 contents2\r\r Alert Colored box\nthis is a text\rthis is a text\rthis is a text\rthis is a text\rNotice success text\r info text\r warning text\r error text\r ","description":"tabs, code-tabs, expand, alert, warning, notice, img, box","id":36,"section":"posts","tags":["shortcode"],"title":"Shortcodes","uri":"https://www.liqiangxo.one/en/posts/shortcodes/"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution  Tiam, ad mint andaepu dandae nostion secatur sequo quae.\nNote that you can use Markdown syntax within a blockquote.\n Blockquote with attribution  Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n Tables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\n   Name Age     Bob 27   Alice 23    Inline Markdown within tables    Inline  Markdown  In  Table     italics bold strikethrough  code    Code Blocks Code block with backticks html\r\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rCode block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   List Types Ordered List  First item Second item Third item  Unordered List  List item Another item And another item  Nested list  Item   First Sub-item Second Sub-item  Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn: Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015. \u0026#x21a9;\u0026#xfe0e;\n  ","description":"Sample article showcasing basic Markdown syntax and formatting for HTML elements.","id":37,"section":"posts","tags":["markdown","css","html","themes"],"title":"Markdown Syntax Guide","uri":"https://www.liqiangxo.one/en/posts/markdown-syntax/"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\n","description":"A brief description of Hugo Shortcodes","id":38,"section":"posts","tags":["shortcodes","privacy"],"title":"Rich Content","uri":"https://www.liqiangxo.one/en/posts/rich-content/"},{"content":"Code Syntax Highlighting Verify the following code blocks render as code blocks and highlight properly.\nMore about tuning syntax highlighting is the Hugo documentation.\nDiff 1 2 3 4 5 6 7 8 9 10  *** /path/to/original\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; --- /path/to/new\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; *************** *** 1 **** ! This is a line. --- 1 --- ! This is a replacement line. It is important to spell -removed line +new line   *** /path/to/original\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; --- /path/to/new\t\u0026#39;\u0026#39;timestamp\u0026#39;\u0026#39; *************** *** 1 **** ! This is a line. --- 1 --- ! This is a replacement line. It is important to spell -removed line +new line Makefile CC=gcc CFLAGS=-I. hellomake: hellomake.o hellofunc.o $(CC) -o hellomake hellomake.o hellofunc.o -I. 1 2 3 4 5  CC=gcc CFLAGS=-I. hellomake: hellomake.o hellofunc.o $(CC) -o hellomake hellomake.o hellofunc.o -I.   JSON 1 2 3  {\u0026#34;employees\u0026#34;:[ {\u0026#34;firstName\u0026#34;:\u0026#34;John\u0026#34;, \u0026#34;lastName\u0026#34;:\u0026#34;Doe\u0026#34;}, ]}   Markdown 1 2 3  **bold** *italics* [link](www.example.com)   JavaScript 1  document.write(\u0026#39;Hello, world!\u0026#39;);   CSS 1 2 3  body { background-color: red; }   Objective C 1 2 3 4 5 6  #import \u0026lt;stdio.h\u0026gt;  int main (void) { printf (\u0026#34;Hello world!\\n\u0026#34;); }   Python 1  print \u0026#34;Hello, world!\u0026#34;   XML 1 2 3 4 5  \u0026lt;employees\u0026gt; \u0026lt;employee\u0026gt; \u0026lt;firstName\u0026gt;John\u0026lt;/firstName\u0026gt; \u0026lt;lastName\u0026gt;Doe\u0026lt;/lastName\u0026gt; \u0026lt;/employee\u0026gt; \u0026lt;/employees\u0026gt;   Perl 1  print \u0026#34;Hello, World!\\n\u0026#34;;   Bash 1  echo \u0026#34;Hello World\u0026#34;   PHP 1  \u0026lt;?php echo \u0026#39;\u0026lt;p\u0026gt;Hello World\u0026lt;/p\u0026gt;\u0026#39;; ?\u0026gt;   CoffeeScript 1  console.log(“Hello world!”);   C# 1 2 3 4 5 6 7 8  using System; class Program { public static void Main(string[] args) { Console.WriteLine(\u0026#34;Hello, world!\u0026#34;); } }   C++ 1 2 3 4 5 6 7  #include \u0026lt;iostream.h\u0026gt; main() { cout \u0026lt;\u0026lt; \u0026#34;Hello World!\u0026#34;; return 0; }   SQL 1 2  SELECT column_name,column_name FROM table_name;   Go 1 2 3 4 5  package main import \u0026#34;fmt\u0026#34; func main() { fmt.Println(\u0026#34;Hello, 世界\u0026#34;) }   Ruby 1  puts \u0026#34;Hello, world!\u0026#34;   Java 1 2 3 4 5 6 7 8 9 10 11 12  import javax.swing.JFrame; //Importing class JFrame import javax.swing.JLabel; //Importing class JLabel public class HelloWorld { public static void main(String[] args) { JFrame frame = new JFrame(); //Creating frame  frame.setTitle(\u0026#34;Hi!\u0026#34;); //Setting title frame  frame.add(new JLabel(\u0026#34;Hello, world!\u0026#34;));//Adding text to frame  frame.pack(); //Setting size to smallest  frame.setLocationRelativeTo(null); //Centering frame  frame.setVisible(true); //Showing frame  } }   Latex Equation 1  \\frac{d}{dx}\\left( \\int_{0}^{x} f(u)\\,du\\right)=f(x).   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  import {x, y} as p from \u0026#39;point\u0026#39;; const ANSWER = 42; class Car extends Vehicle { constructor(speed, cost) { super(speed); var c = Symbol(\u0026#39;cost\u0026#39;); this[c] = cost; this.intro = `This is a car runs at ${speed}.`; } } for (let num of [1, 2, 3]) { console.log(num + 0b111110111); } function $initHighlight(block, flags) { try { if (block.className.search(/\\bno\\-highlight\\b/) != -1) return processBlock(block.function, true, 0x0F) + \u0026#39; class=\u0026#34;\u0026#34;\u0026#39;; } catch (e) { /* handle exception */ var e4x = \u0026lt;div\u0026gt;Example \u0026lt;p\u0026gt;1234\u0026lt;/p\u0026gt;\u0026lt;/div\u0026gt;; } for (var i = 0 / 2; i \u0026lt; classes.length; i++) { // \u0026#34;0 / 2\u0026#34; should not be parsed as regexp  if (checkCondition(classes[i]) === undefined) return /\\d+[\\s/]/g; } console.log(Array.every(classes, Boolean)); } export $initHighlight;   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Hello world\u0026lt;/title\u0026gt; \u0026lt;link href=\u0026#39;http://fonts.googleapis.com/css?family=Roboto:400,400italic,700,700italic\u0026#39; rel=\u0026#39;stylesheet\u0026#39; type=\u0026#39;text/css\u0026#39;\u0026gt; \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;index.css\u0026#34; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;div id=\u0026#34;app\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script src=\u0026#34;//cdnjs.cloudflare.com/ajax/libs/less.js/2.5.1/less.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;vendor/prism.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;examples.bundle.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41  /********************************************************* * General */ pre[class*=\u0026#34;language-\u0026#34;], code { color: #5c6e74; font-size: 13px; text-shadow: none; font-family: Consolas, Monaco, \u0026#39;Andale Mono\u0026#39;, \u0026#39;Ubuntu Mono\u0026#39;, monospace; direction: ltr; text-align: left; white-space: pre; word-spacing: normal; word-break: normal; line-height: 1.5; tab-size: 4; hyphens: none; } pre[class*=\u0026#34;language-\u0026#34;]::selection, code::selection { text-shadow: none; background: #b3d4fc; } @media print { pre[class*=\u0026#34;language-\u0026#34;], code { text-shadow: none; } } pre[class*=\u0026#34;language-\u0026#34;] { padding: 1em; margin: .5em 0; overflow: auto; background: #f8f5ec; } :not(pre) \u0026gt; code { padding: .1em .3em; border-radius: .3em; color: #db4c69; background: #f9f2f4; }   ","description":"Syntax highlighting test","id":39,"section":"posts","tags":["hugo"],"title":"Syntax highlighting","uri":"https://www.liqiangxo.one/en/posts/syntax-highlight/"},{"content":"We need goldmark katex entension which is not yet we have: [https://github.com/gohugoio/hugo/issues/6544](https://github.com/gohugoio/hugo/issues/6544)\r Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\n Create a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so:  {{ if or .Params.math .Site.Params.math }}\r{{ partial \u0026quot;math.html\u0026quot; . }}\r{{ end }}\r To enable KaTex globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTex on a per page basis include the parameter math: true in content files.  Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $$ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $$\nBlock math:\n$$\n\\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","description":"A brief guide to setup KaTeX","id":40,"section":"posts","tags":null,"title":"Math Typesetting","uri":"https://www.liqiangxo.one/en/posts/math-typesetting/"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site’s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 🙈 🙉 🙉 🙊 🙊\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3  .emoji { font-family: Apple Color Emoji,Segoe UI Emoji,NotoColorEmoji,Segoe UI Symbol,Android Emoji,EmojiSymbols; }  ","description":"Guide to emoji usage in Hugo","id":41,"section":"posts","tags":["emoji","gamoji","namoji","bamoji","amoji"],"title":"Emoji Support","uri":"https://www.liqiangxo.one/en/posts/emoji-support/"},{"content":"digraph G {\rsubgraph cluster_0 {\rstyle=filled;\rcolor=lightgrey;\rnode [style=filled,color=white];\ra0 -\u0026gt; a1 -\u0026gt; a2 -\u0026gt; a3;\rlabel = \u0026quot;process #1\u0026quot;;\r}\rsubgraph cluster_1 {\rnode [style=filled];\rb0 -\u0026gt; b1 -\u0026gt; b2 -\u0026gt; b3;\rlabel = \u0026quot;process #2\u0026quot;;\rcolor=blue\r}\rstart -\u0026gt; a0;\rstart -\u0026gt; b0;\ra1 -\u0026gt; b3;\rb2 -\u0026gt; a3;\ra3 -\u0026gt; a0;\ra3 -\u0026gt; end;\rb3 -\u0026gt; end;\rstart [shape=Mdiamond];\rend [shape=Msquare];\r}\r","description":"A hack to put Graphviz on the web.","id":42,"section":"posts","tags":[""],"title":"Viz support","uri":"https://www.liqiangxo.one/en/posts/test-viz/"},{"content":"{ \u0026quot;signal\u0026quot;: [ {\u0026quot;name\u0026quot;: \u0026quot;CLK\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;p.....|...\u0026quot;},\r{\u0026quot;name\u0026quot;:\u0026quot;DAT\u0026quot;, \u0026quot;wave\u0026quot;:\u0026quot;x.345x|=.x\u0026quot;, \u0026quot;data\u0026quot;:[\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;,\u0026quot;D\u0026quot;]},\r{\u0026quot;name\u0026quot;: \u0026quot;REQ\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;0.1..0|1.0\u0026quot;},\r{},\r{\u0026quot;name\u0026quot;: \u0026quot;ACK\u0026quot;, \u0026quot;wave\u0026quot;: \u0026quot;1.....|01.\u0026quot;}\r]}\r","description":"WaveDrom is a Free and Open Source online digital timing diagram (waveform) rendering engine that uses javascript, HTML5 and SVG to convert a WaveJSON input text description into SVG vector graphics.","id":43,"section":"posts","tags":[""],"title":"Wavedrom support","uri":"https://www.liqiangxo.one/en/posts/test-wavedrom/"},{"content":"{\r\u0026quot;type\u0026quot;: \u0026quot;bar\u0026quot;,\r\u0026quot;data\u0026quot;: {\r\u0026quot;labels\u0026quot;: [\u0026quot;One\u0026quot;, \u0026quot;Two\u0026quot;, \u0026quot;Three\u0026quot;, \u0026quot;Four\u0026quot;, \u0026quot;Five\u0026quot;, \u0026quot;Six\u0026quot;],\r\u0026quot;datasets\u0026quot;: [{\r\u0026quot;label\u0026quot;: \u0026quot;# of Votes\u0026quot;,\r\u0026quot;data\u0026quot;: [12, 19, 3, 5, 3, 8]\r}]\r}\r}\r{\r\u0026quot;type\u0026quot;: \u0026quot;line\u0026quot;,\r\u0026quot;data\u0026quot;: {\r\u0026quot;labels\u0026quot;: [\u0026quot;One\u0026quot;, \u0026quot;Two\u0026quot;, \u0026quot;Three\u0026quot;, \u0026quot;Four\u0026quot;, \u0026quot;Five\u0026quot;, \u0026quot;Six\u0026quot;],\r\u0026quot;datasets\u0026quot;: [\r{\r\u0026quot;label\u0026quot;: \u0026quot;# of Votes\u0026quot;,\r\u0026quot;data\u0026quot;: [12, 19, 3, 5, 2, 3],\r\u0026quot;backgroundColor\u0026quot;:\u0026quot;transparent\u0026quot;,\r\u0026quot;borderColor\u0026quot;:\u0026quot;orange\u0026quot;\r},\r{\r\u0026quot;label\u0026quot;: \u0026quot;Some other set\u0026quot;,\r\u0026quot;data\u0026quot;: [15, 8, 13, 5, 5, 9],\r\u0026quot;backgroundColor\u0026quot;:\u0026quot;transparent\u0026quot;,\r\u0026quot;borderColor\u0026quot;:\u0026quot;#44ccff\u0026quot;\r}\r]\r}\r}\r","description":"Simple yet flexible JavaScript charting for designers \u0026 developers","id":44,"section":"posts","tags":[""],"title":"Chart support","uri":"https://www.liqiangxo.one/en/posts/test-chartjs/"},{"content":"Alice-\u0026gt;Bob: Hello Bob, how are you?\rNote right of Bob: Bob thinks\rBob--\u0026gt;Alice: I am good thanks!\rTitle: Here is a title\rA-\u0026gt;B: Normal line\rB--\u0026gt;C: Dashed line\rC-\u0026gt;\u0026gt;D: Open arrow\rD--\u0026gt;\u0026gt;A: Dashed open arrow\r","description":"Generates UML sequence diagrams from simple text","id":45,"section":"posts","tags":[""],"title":"JS Sequence Diagram support","uri":"https://www.liqiangxo.one/en/posts/test-js-sequence-diagrams/"},{"content":"graph TD;\rA--\u0026gt;B;\rA--\u0026gt;C;\rB--\u0026gt;D;\rC--\u0026gt;D;\rsequenceDiagram\rparticipant Alice\rparticipant Bob\rAlice-\u0026gt;John: Hello John, how are you?\rloop Healthcheck\rJohn-\u0026gt;John: Fight against hypochondria\rend\rNote right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail...\rJohn--\u0026gt;Alice: Great!\rJohn-\u0026gt;Bob: How about you?\rBob--\u0026gt;John: Jolly good!\rgraph TD\rA[Hard] --\u0026gt;|Text| B(Round)\rB --\u0026gt; C{Decision}\rC --\u0026gt;|One| D[Result 1]\rC --\u0026gt;|Two| E[Result 2]\rgantt\rsection Section\rCompleted :done, des1, 2014-01-06,2014-01-08\rActive :active, des2, 2014-01-07, 3d\rParallel 1 : des3, after des1, 1d\rParallel 2 : des4, after des1, 1d\rParallel 3 : des5, after des3, 1d\rParallel 4 : des6, after des4, 1d\rclassDiagram\rClass01 \u0026lt;|-- AveryLongClass : Cool\r\u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01\rClass09 --\u0026gt; C2 : Where am i?\rClass09 --* C3\rClass09 --|\u0026gt; Class07\rClass07 : equals()\rClass07 : Object[] elementData\rClass01 : size()\rClass01 : int chimp\rClass01 : int gorilla\rclass Class10 {\r\u0026lt;\u0026lt;service\u0026gt;\u0026gt;\rint id\rsize()\r}\rstateDiagram\r[*] --\u0026gt; Still\rStill --\u0026gt; [*]\rStill --\u0026gt; Moving\rMoving --\u0026gt; Still\rMoving --\u0026gt; Crash\rCrash --\u0026gt; [*]\rpie\r\u0026quot;Dogs\u0026quot; : 386\r\u0026quot;Cats\u0026quot; : 85\r\u0026quot;Rats\u0026quot; : 15 ","description":"Generate diagrams, charts, graphs or flows from markdown-like text via javascript.","id":46,"section":"posts","tags":["diagram"],"title":"Mermaid support","uri":"https://www.liqiangxo.one/en/posts/test-mermaid/"},{"content":"When $a \\ne 0$, there are two solutions to $(ax^2 + bx + c = 0)$ and they are\n$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$\n","description":"A JavaScript display engine for mathematics that works in all browsers.No more setup for readers. It just works.","id":47,"section":"posts","tags":[""],"title":"MathJax support","uri":"https://www.liqiangxo.one/en/posts/test-mathjax/"},{"content":"The following\n$$ \\int_{a}^{b} x^2 dx $$\nIs an integral\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\nEnable Katex in the config file by setting the katex param to true. This will import the necessary Katex CSS/JS.\nSee the online reference of supported TeX functions.\nNote: For inline math to render correctly, your content file extension must be .mmark. See the official mmark site.\nInline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $\rInline math: $ \\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887… $\nBlock math:\r$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\rBlock math:\n$$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","description":"KaTeX is a fast, easy-to-use JavaScript library for TeX math rendering on the web.","id":48,"section":"posts","tags":[""],"title":"Katex support","uri":"https://www.liqiangxo.one/en/posts/test-katex/"},{"content":"st=\u0026gt;start: Start|past:\u0026gt;http://www.google.com[blank]\re=\u0026gt;end: End|future:\u0026gt;http://www.google.com\rop1=\u0026gt;operation: My Operation|past\rop2=\u0026gt;operation: Stuff|current\rsub1=\u0026gt;subroutine: My Subroutine|invalid\rcond=\u0026gt;condition: Yes\ror No?|approved:\u0026gt;http://www.google.com\rc2=\u0026gt;condition: Good idea|rejected\rio=\u0026gt;inputoutput: catch something...|future\rst-\u0026gt;op1(right)-\u0026gt;cond\rcond(yes, right)-\u0026gt;c2\rcond(no)-\u0026gt;sub1(left)-\u0026gt;op1\rc2(yes)-\u0026gt;io-\u0026gt;e\rc2(no)-\u0026gt;op2-\u0026gt;e\r","description":"flowchart.js is a flowchart DSL and SVG render that runs in the browser and terminal. Nodes and connections are defined in separately so that nodes can be reused and connections can be quickly changed.","id":49,"section":"posts","tags":[""],"title":"Flowchart support","uri":"https://www.liqiangxo.one/en/posts/test-flowchart/"},{"content":"Sample images from Pixabay\n","description":"cartoon gallery","id":50,"section":"gallery","tags":null,"title":"Cartoon","uri":"https://www.liqiangxo.one/en/gallery/cartoon/"},{"content":"Sample images from Pixabay\n","description":"photo gallery","id":51,"section":"gallery","tags":null,"title":"Photo","uri":"https://www.liqiangxo.one/en/gallery/photo/"},{"content":"Written in Go, Hugo is an open source static site generator available under the Apache Licence 2.0. Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.\nHugo makes use of a variety of open source projects including:\n https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.\nHugo is for people who want to hand code their own website without worrying about setting up complicated runtimes, dependencies and databases.\nWebsites built with Hugo are extremelly fast, secure and can be deployed anywhere including, AWS, GitHub Pages, Heroku, Netlify and any other hosting provider.\nLearn more and contribute on GitHub.\n","description":"Hugo, the world’s fastest framework for building websites","id":56,"section":"","tags":null,"title":"About","uri":"https://www.liqiangxo.one/en/about/"}]